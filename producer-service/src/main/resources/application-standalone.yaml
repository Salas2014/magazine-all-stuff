spring:
  config:
    import: 'consul:'
  application:
    name: producer-service

  cloud:
    consul:
      port: 8500
      host: localhost
      discovery:
        hostname: host.docker.internal
        instance-id: producer-service
        acl-token: 85c3fcbb-c529-c1aa-cd00-1e80b5ac9335
      config:
        data-key: data
        format: yaml
        acl-token: 85c3fcbb-c529-c1aa-cd00-1e80b5ac9335

  kafka:
    bootstrap-servers: host.docker.internal:9092,host.docker.internal:9093,host.docker.internal:9094
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    properties:
      schema.registry.url: http://host.docker.internal:8081
event:
  topic: events
  generation:
    interval-ms: 1000  # Интервал генерации событий (1 сообщение в секунду)


management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - prometheus
          - metrics
          - info
  prometheus:
    metrics:
      export:
        enabled: true
  endpoint:
    prometheus:
      enabled: true

server:
  port: 8182